var app = (function () {
  'use strict';

  const _c = 'color: cornflowerblue';

  const rbuttons = {
    'Right|#1445d733': async function () {
      console.log('%cMacro: Clicked on "Right" button', 'color:#bc0099');
    },
    'Two|#1445d733': async function () {
      console.log('%cMacro: Clicked on "Right" button', 'color:#bc0099');
    },
  };

  var macros$2 = () => {
    const hello = 'world';

    async function observeOnce() {
      console.log('%cMacro: execute after observer once', _c);
    }
    return {
      '/'() {
        const target = document.querySelector('.mitm-container.center');
        new mitm.svelte.Hotkeys({target});
        console.log('%cMacro: olleh >< hello', _c, hello);
        const keys = {
          'code:KeyA'(_e) {
            console.log(`%cMacro: ${_e.code}`, _c, _e);
          },
          'code:{KeyA}'(_e) {
            console.log(`%cAlt Macro: ${_e.code}`, _c, _e);
          },
          'key:us'(_e) {
            console.log(`%cUS Country`, _c, _e);
          },
          'key:u'(_e) {
            console.log(`%cU Char`, _c, _e);
          }
        };
        keys['code:KeyA'  ]._title = 'this is KeyA';
        keys['code:{KeyA}']._title = 'this is {KeyA}';
        keys['key:us'     ]._title = 'this is us';
        keys['key:u'      ]._title = 'this is u';

        window.mitm.macrokeys = keys;
        window.mitm.autofill = ['input[type="password"] => password'];
        window.mitm.autobuttons  = rbuttons;
        window.mitm.rightbuttons = rbuttons;
        window.mitm.leftbuttons  = rbuttons;
        return observeOnce
      },
      zero: '0'
    }
  };

  const dodol = 'lipret';
  console.log(dodol);
  var test = dodol;

  var hi_macros = () => {
    const lol = test;

    window.mitm.macros = {
        one: '1',
        two: '2',
        thr: '3',
        fou: '4',
    };
    console.log(lol);
    return window.mitm.macros
  };

  var macros$1 = () => {
    const hello = 'global';

    window.mitm.macros = {global: hello};
    return window.mitm.macros
  };

  // [Ctrl] + [Alt] + [A] => run hotkey KeyA
  // [Ctrl] + [Shift] => Hide / Show Buttons
  const {macros} = window.mitm;
  let _body1 = macros$2;
  if (typeof _body1==='function') { 
    _body1 = _body1();
  }
  let _body2 = hi_macros;
  if (typeof _body2==='function') {
    _body2 = _body2();
  }
  let global = macros$1;
  if (typeof global==='function') { 
    global = global();
  }
  window.mitm.macros = {
    ...global,
    ...macros,
    ..._body1,
    ..._body2
  };

  var hi_build = {

  };

  return hi_build;

}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlAbWFjcm9zLmpzIiwic291cmNlcyI6WyIuLi9fbWFjcm9zXy9tYWNyb3MuanMiLCIuLi9fbWFjcm9zXy90ZXN0LmpzIiwiLi4vX21hY3Jvc18vaGlAbWFjcm9zLmpzIiwiLi4vLi4vX2dsb2JhbF8vX21hY3Jvc18vbWFjcm9zLmpzIiwiLi4vX21hY3Jvc18vaGlAYnVpbGQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qge2RlZmF1bHQ6QXBwfSA9IHJlcXVpcmUoJy4uL19zdmVsdGVfL1ZCb3guc3ZlbHRlJylcclxuY29uc3QgX2MgPSAnY29sb3I6IGNvcm5mbG93ZXJibHVlJ1xyXG5cclxuY29uc3QgcmJ1dHRvbnMgPSB7XHJcbiAgJ1JpZ2h0fCMxNDQ1ZDczMyc6IGFzeW5jIGZ1bmN0aW9uICgpIHtcclxuICAgIGNvbnNvbGUubG9nKCclY01hY3JvOiBDbGlja2VkIG9uIFwiUmlnaHRcIiBidXR0b24nLCAnY29sb3I6I2JjMDA5OScpXHJcbiAgfSxcclxuICAnVHdvfCMxNDQ1ZDczMyc6IGFzeW5jIGZ1bmN0aW9uICgpIHtcclxuICAgIGNvbnNvbGUubG9nKCclY01hY3JvOiBDbGlja2VkIG9uIFwiUmlnaHRcIiBidXR0b24nLCAnY29sb3I6I2JjMDA5OScpXHJcbiAgfSxcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSAoKSA9PiB7XHJcbiAgY29uc3QgaGVsbG8gPSAnd29ybGQnXHJcblxyXG4gIGFzeW5jIGZ1bmN0aW9uIG9ic2VydmVPbmNlKCkge1xyXG4gICAgY29uc29sZS5sb2coJyVjTWFjcm86IGV4ZWN1dGUgYWZ0ZXIgb2JzZXJ2ZXIgb25jZScsIF9jKVxyXG4gIH1cclxuICByZXR1cm4ge1xyXG4gICAgJy8nKCkge1xyXG4gICAgICBjb25zdCB0YXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubWl0bS1jb250YWluZXIuY2VudGVyJylcclxuICAgICAgbmV3IG1pdG0uc3ZlbHRlLkhvdGtleXMoe3RhcmdldH0pXHJcbiAgICAgIGNvbnNvbGUubG9nKCclY01hY3JvOiBvbGxlaCA+PCBoZWxsbycsIF9jLCBoZWxsbylcclxuICAgICAgY29uc3Qga2V5cyA9IHtcclxuICAgICAgICAnY29kZTpLZXlBJyhfZSkge1xyXG4gICAgICAgICAgY29uc29sZS5sb2coYCVjTWFjcm86ICR7X2UuY29kZX1gLCBfYywgX2UpXHJcbiAgICAgICAgfSxcclxuICAgICAgICAnY29kZTp7S2V5QX0nKF9lKSB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhgJWNBbHQgTWFjcm86ICR7X2UuY29kZX1gLCBfYywgX2UpXHJcbiAgICAgICAgfSxcclxuICAgICAgICAna2V5OnVzJyhfZSkge1xyXG4gICAgICAgICAgY29uc29sZS5sb2coYCVjVVMgQ291bnRyeWAsIF9jLCBfZSlcclxuICAgICAgICB9LFxyXG4gICAgICAgICdrZXk6dScoX2UpIHtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKGAlY1UgQ2hhcmAsIF9jLCBfZSlcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAga2V5c1snY29kZTpLZXlBJyAgXS5fdGl0bGUgPSAndGhpcyBpcyBLZXlBJ1xyXG4gICAgICBrZXlzWydjb2RlOntLZXlBfSddLl90aXRsZSA9ICd0aGlzIGlzIHtLZXlBfSdcclxuICAgICAga2V5c1sna2V5OnVzJyAgICAgXS5fdGl0bGUgPSAndGhpcyBpcyB1cydcclxuICAgICAga2V5c1sna2V5OnUnICAgICAgXS5fdGl0bGUgPSAndGhpcyBpcyB1J1xyXG5cclxuICAgICAgd2luZG93Lm1pdG0ubWFjcm9rZXlzID0ga2V5c1xyXG4gICAgICB3aW5kb3cubWl0bS5hdXRvZmlsbCA9IFsnaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdID0+IHBhc3N3b3JkJ11cclxuICAgICAgd2luZG93Lm1pdG0uYXV0b2J1dHRvbnMgID0gcmJ1dHRvbnNcclxuICAgICAgd2luZG93Lm1pdG0ucmlnaHRidXR0b25zID0gcmJ1dHRvbnNcclxuICAgICAgd2luZG93Lm1pdG0ubGVmdGJ1dHRvbnMgID0gcmJ1dHRvbnNcclxuICAgICAgcmV0dXJuIG9ic2VydmVPbmNlXHJcbiAgICB9LFxyXG4gICAgemVybzogJzAnXHJcbiAgfVxyXG59XHJcbiIsImNvbnN0IGRvZG9sID0gJ2xpcHJldCdcclxuY29uc29sZS5sb2coZG9kb2wpXHJcbm1vZHVsZS5leHBvcnRzID0gZG9kb2xcclxuIiwibW9kdWxlLmV4cG9ydHMgPSAoKSA9PiB7XHJcbiAgY29uc3QgbG9sID0gcmVxdWlyZSgnLi90ZXN0JylcclxuICBjb25zdCBoZWxsbyA9ICdoaSBtYWNyb3MnXHJcblxyXG4gIHdpbmRvdy5taXRtLm1hY3JvcyA9IHtcclxuICAgICAgb25lOiAnMScsXHJcbiAgICAgIHR3bzogJzInLFxyXG4gICAgICB0aHI6ICczJyxcclxuICAgICAgZm91OiAnNCcsXHJcbiAgfVxyXG4gIGNvbnNvbGUubG9nKGxvbClcclxuICByZXR1cm4gd2luZG93Lm1pdG0ubWFjcm9zXHJcbn0iLCJtb2R1bGUuZXhwb3J0cyA9ICgpID0+IHtcclxuICBjb25zdCBoZWxsbyA9ICdnbG9iYWwnXHJcblxyXG4gIHdpbmRvdy5taXRtLm1hY3JvcyA9IHtnbG9iYWw6IGhlbGxvfVxyXG4gIHJldHVybiB3aW5kb3cubWl0bS5tYWNyb3NcclxufVxyXG4iLCIvLyBbQ3RybF0gKyBbQWx0XSArIFtBXSA9PiBydW4gaG90a2V5IEtleUFcbi8vIFtDdHJsXSArIFtTaGlmdF0gPT4gSGlkZSAvIFNob3cgQnV0dG9uc1xuY29uc3Qge21hY3Jvc30gPSB3aW5kb3cubWl0bVxubGV0IF9ib2R5MSA9IHJlcXVpcmUoJy4vbWFjcm9zJylcbmlmICh0eXBlb2YgX2JvZHkxPT09J2Z1bmN0aW9uJykgeyBcbiAgX2JvZHkxID0gX2JvZHkxKClcbn1cbmxldCBfYm9keTIgPSByZXF1aXJlKCcuL2hpQG1hY3Jvcy5qcycpXG5pZiAodHlwZW9mIF9ib2R5Mj09PSdmdW5jdGlvbicpIHtcbiAgX2JvZHkyID0gX2JvZHkyKClcbn1cbmxldCBnbG9iYWwgPSByZXF1aXJlKCcuLi8uLi9fZ2xvYmFsXy9fbWFjcm9zXy9tYWNyb3MnKVxuaWYgKHR5cGVvZiBnbG9iYWw9PT0nZnVuY3Rpb24nKSB7IFxuICBnbG9iYWwgPSBnbG9iYWwoKVxufVxud2luZG93Lm1pdG0ubWFjcm9zID0ge1xuICAuLi5nbG9iYWwsXG4gIC4uLm1hY3JvcyxcbiAgLi4uX2JvZHkxLFxuICAuLi5fYm9keTJcbn1cbiJdLCJuYW1lcyI6WyJyZXF1aXJlJCQwIiwicmVxdWlyZSQkMSIsInJlcXVpcmUkJDIiXSwibWFwcGluZ3MiOiI7OztFQUNBLE1BQU0sRUFBRSxHQUFHLHdCQUF1QjtBQUNsQztFQUNBLE1BQU0sUUFBUSxHQUFHO0VBQ2pCLEVBQUUsaUJBQWlCLEVBQUUsa0JBQWtCO0VBQ3ZDLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxvQ0FBb0MsRUFBRSxlQUFlLEVBQUM7RUFDdEUsR0FBRztFQUNILEVBQUUsZUFBZSxFQUFFLGtCQUFrQjtFQUNyQyxJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsb0NBQW9DLEVBQUUsZUFBZSxFQUFDO0VBQ3RFLEdBQUc7RUFDSCxFQUFDO0FBQ0Q7RUFDQSxZQUFjLEdBQUcsTUFBTTtFQUN2QixFQUFFLE1BQU0sS0FBSyxHQUFHLFFBQU87QUFDdkI7RUFDQSxFQUFFLGVBQWUsV0FBVyxHQUFHO0VBQy9CLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxzQ0FBc0MsRUFBRSxFQUFFLEVBQUM7RUFDM0QsR0FBRztFQUNILEVBQUUsT0FBTztFQUNULElBQUksR0FBRyxHQUFHO0VBQ1YsTUFBTSxNQUFNLE1BQU0sR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLHdCQUF3QixFQUFDO0VBQ3JFLE1BQU0sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFDO0VBQ3ZDLE1BQU0sT0FBTyxDQUFDLEdBQUcsQ0FBQyx5QkFBeUIsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFDO0VBQ3ZELE1BQU0sTUFBTSxJQUFJLEdB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
