var app = (function () {
  'use strict';

  // const {default:App} = require('../_svelte_/VBox.svelte')
  const _c = 'color: cornflowerblue';

  const rbuttons = {
    'Right|#1445d733': async function () {
      console.log('%cMacro: Clicked on "Right" button', 'color:#bc0099');
    },
  };

  var macros$2 = () => {
    const hello = 'world';

    async function observeOnce() {
      console.log('%cMacro: execute after observer once', _c);
    }

    return {
      '/'() {
        // new App({ target: document.body })
        console.log('%cMacro: olleh >< hello', _c, hello);
        window.mitm.macrokeys = {
          'code:KeyA'(_e) {
            console.log(`%cMacro: ${_e.code}`, _c, _e);
          },
          'code:{KeyA}'(_e) {
            console.log(`%cAlt Macro: ${_e.code}`, _c, _e);
          },
          'key:us'(_e) {
            console.log(`%cUS Country`, _c, _e);
          },
          'key:u'(_e) {
            console.log(`%cU Char`, _c, _e);
          }
        };

        window.mitm.autofill = ['input[type="password"] => password'];
        window.mitm.autobuttons  = rbuttons;

        return observeOnce
      },
      zero: '0'
    }
  };

  const dodol = 'lipret';
  console.log(dodol);
  var test = dodol;

  var hi_macros = () => {
    const lol = test;

    window.mitm.macros = {
        one: '1',
        two: '2',
        thr: '3',
        fou: '4',
    };
    console.log(lol);
    return window.mitm.macros
  };

  var macros$1 = () => {
    const hello = 'global';

    window.mitm.macros = {global: hello};
    return window.mitm.macros
  };

  // [Ctrl] + [Alt] + [A] => run hotkey KeyA
  // [Ctrl] + [Shift] => Hide / Show Buttons
  const {macros} = window.mitm;
  let _body1 = macros$2;
  if (typeof _body1==='function') { 
    _body1 = _body1();
  }
  let _body2 = hi_macros;
  if (typeof _body2==='function') {
    _body2 = _body2();
  }
  let global = macros$1;
  if (typeof global==='function') { 
    global = global();
  }
  window.mitm.macros = {
    ...global,
    ...macros,
    ..._body1,
    ..._body2
  };

  var hi_build = {

  };

  return hi_build;

}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlAbWFjcm9zLmpzIiwic291cmNlcyI6WyIuLi9fbWFjcm9zXy9tYWNyb3MuanMiLCIuLi9fbWFjcm9zXy90ZXN0LmpzIiwiLi4vX21hY3Jvc18vaGlAbWFjcm9zLmpzIiwiLi4vLi4vX2dsb2JhbF8vX21hY3Jvc18vbWFjcm9zLmpzIiwiLi4vX21hY3Jvc18vaGlAYnVpbGQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gY29uc3Qge2RlZmF1bHQ6QXBwfSA9IHJlcXVpcmUoJy4uL19zdmVsdGVfL1ZCb3guc3ZlbHRlJylcclxuY29uc3QgX2MgPSAnY29sb3I6IGNvcm5mbG93ZXJibHVlJ1xyXG5cclxuY29uc3QgcmJ1dHRvbnMgPSB7XHJcbiAgJ1JpZ2h0fCMxNDQ1ZDczMyc6IGFzeW5jIGZ1bmN0aW9uICgpIHtcclxuICAgIGNvbnNvbGUubG9nKCclY01hY3JvOiBDbGlja2VkIG9uIFwiUmlnaHRcIiBidXR0b24nLCAnY29sb3I6I2JjMDA5OScpXHJcbiAgfSxcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSAoKSA9PiB7XHJcbiAgY29uc3QgaGVsbG8gPSAnd29ybGQnXHJcblxyXG4gIGFzeW5jIGZ1bmN0aW9uIG9ic2VydmVPbmNlKCkge1xyXG4gICAgY29uc29sZS5sb2coJyVjTWFjcm86IGV4ZWN1dGUgYWZ0ZXIgb2JzZXJ2ZXIgb25jZScsIF9jKVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHtcclxuICAgICcvJygpIHtcclxuICAgICAgLy8gbmV3IEFwcCh7IHRhcmdldDogZG9jdW1lbnQuYm9keSB9KVxyXG4gICAgICBjb25zb2xlLmxvZygnJWNNYWNybzogb2xsZWggPjwgaGVsbG8nLCBfYywgaGVsbG8pXHJcbiAgICAgIHdpbmRvdy5taXRtLm1hY3Jva2V5cyA9IHtcclxuICAgICAgICAnY29kZTpLZXlBJyhfZSkge1xyXG4gICAgICAgICAgY29uc29sZS5sb2coYCVjTWFjcm86ICR7X2UuY29kZX1gLCBfYywgX2UpXHJcbiAgICAgICAgfSxcclxuICAgICAgICAnY29kZTp7S2V5QX0nKF9lKSB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhgJWNBbHQgTWFjcm86ICR7X2UuY29kZX1gLCBfYywgX2UpXHJcbiAgICAgICAgfSxcclxuICAgICAgICAna2V5OnVzJyhfZSkge1xyXG4gICAgICAgICAgY29uc29sZS5sb2coYCVjVVMgQ291bnRyeWAsIF9jLCBfZSlcclxuICAgICAgICB9LFxyXG4gICAgICAgICdrZXk6dScoX2UpIHtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKGAlY1UgQ2hhcmAsIF9jLCBfZSlcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHdpbmRvdy5taXRtLmF1dG9maWxsID0gWydpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0gPT4gcGFzc3dvcmQnXVxyXG4gICAgICB3aW5kb3cubWl0bS5hdXRvYnV0dG9ucyAgPSByYnV0dG9uc1xyXG5cclxuICAgICAgcmV0dXJuIG9ic2VydmVPbmNlXHJcbiAgICB9LFxyXG4gICAgemVybzogJzAnXHJcbiAgfVxyXG59XHJcbiIsImNvbnN0IGRvZG9sID0gJ2xpcHJldCdcclxuY29uc29sZS5sb2coZG9kb2wpXHJcbm1vZHVsZS5leHBvcnRzID0gZG9kb2xcclxuIiwibW9kdWxlLmV4cG9ydHMgPSAoKSA9PiB7XHJcbiAgY29uc3QgbG9sID0gcmVxdWlyZSgnLi90ZXN0JylcclxuICBjb25zdCBoZWxsbyA9ICdoaSBtYWNyb3MnXHJcblxyXG4gIHdpbmRvdy5taXRtLm1hY3JvcyA9IHtcclxuICAgICAgb25lOiAnMScsXHJcbiAgICAgIHR3bzogJzInLFxyXG4gICAgICB0aHI6ICczJyxcclxuICAgICAgZm91OiAnNCcsXHJcbiAgfVxyXG4gIGNvbnNvbGUubG9nKGxvbClcclxuICByZXR1cm4gd2luZG93Lm1pdG0ubWFjcm9zXHJcbn0iLCJtb2R1bGUuZXhwb3J0cyA9ICgpID0+IHtcclxuICBjb25zdCBoZWxsbyA9ICdnbG9iYWwnXHJcblxyXG4gIHdpbmRvdy5taXRtLm1hY3JvcyA9IHtnbG9iYWw6IGhlbGxvfVxyXG4gIHJldHVybiB3aW5kb3cubWl0bS5tYWNyb3NcclxufVxyXG4iLCIvLyBbQ3RybF0gKyBbQWx0XSArIFtBXSA9PiBydW4gaG90a2V5IEtleUFcbi8vIFtDdHJsXSArIFtTaGlmdF0gPT4gSGlkZSAvIFNob3cgQnV0dG9uc1xuY29uc3Qge21hY3Jvc30gPSB3aW5kb3cubWl0bVxubGV0IF9ib2R5MSA9IHJlcXVpcmUoJy4vbWFjcm9zJylcbmlmICh0eXBlb2YgX2JvZHkxPT09J2Z1bmN0aW9uJykgeyBcbiAgX2JvZHkxID0gX2JvZHkxKClcbn1cbmxldCBfYm9keTIgPSByZXF1aXJlKCcuL2hpQG1hY3Jvcy5qcycpXG5pZiAodHlwZW9mIF9ib2R5Mj09PSdmdW5jdGlvbicpIHtcbiAgX2JvZHkyID0gX2JvZHkyKClcbn1cbmxldCBnbG9iYWwgPSByZXF1aXJlKCcuLi8uLi9fZ2xvYmFsXy9fbWFjcm9zXy9tYWNyb3MnKVxuaWYgKHR5cGVvZiBnbG9iYWw9PT0nZnVuY3Rpb24nKSB7IFxuICBnbG9iYWwgPSBnbG9iYWwoKVxufVxud2luZG93Lm1pdG0ubWFjcm9zID0ge1xuICAuLi5nbG9iYWwsXG4gIC4uLm1hY3JvcyxcbiAgLi4uX2JvZHkxLFxuICAuLi5fYm9keTJcbn1cbiJdLCJuYW1lcyI6WyJyZXF1aXJlJCQwIiwicmVxdWlyZSQkMSIsInJlcXVpcmUkJDIiXSwibWFwcGluZ3MiOiI7OztFQUFBO0VBQ0EsTUFBTSxFQUFFLEdBQUcsd0JBQXVCO0FBQ2xDO0VBQ0EsTUFBTSxRQUFRLEdBQUc7RUFDakIsRUFBRSxpQkFBaUIsRUFBRSxrQkFBa0I7RUFDdkMsSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLG9DQUFvQyxFQUFFLGVBQWUsRUFBQztFQUN0RSxHQUFHO0VBQ0gsRUFBQztBQUNEO0VBQ0EsWUFBYyxHQUFHLE1BQU07RUFDdkIsRUFBRSxNQUFNLEtBQUssR0FBRyxRQUFPO0FBQ3ZCO0VBQ0EsRUFBRSxlQUFlLFdBQVcsR0FBRztFQUMv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
