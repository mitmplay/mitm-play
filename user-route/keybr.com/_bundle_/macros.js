(()=>{var __defProp=Object.defineProperty;var __getOwnPropSymbols=Object.getOwnPropertySymbols;var __hasOwnProp=Object.prototype.hasOwnProperty;var __propIsEnum=Object.prototype.propertyIsEnumerable;var __defNormalProp=(obj,key,value)=>key in obj?__defProp(obj,key,{enumerable:true,configurable:true,writable:true,value}):obj[key]=value;var __spreadValues=(a,b)=>{for(var prop in b||(b={}))if(__hasOwnProp.call(b,prop))__defNormalProp(a,prop,b[prop]);if(__getOwnPropSymbols)for(var prop of __getOwnPropSymbols(b)){if(__propIsEnum.call(b,prop))__defNormalProp(a,prop,b[prop])}return a};var __commonJS=(cb,mod)=>function __require(){return mod||(0,cb[Object.keys(cb)[0]])((mod={exports:{}}).exports,mod),mod.exports};var require_macros=__commonJS({"user-route/keybr.com/_macros_/macros.js"(exports,module){var _c="color: cornflowerblue";var rbuttons={"Right|#1445d733":async function(){console.log('%cMacro: Clicked on "Right" button',"color:#bc0099")}};module.exports=()=>{const hello="world";async function observeOnce(){console.log("%cMacro: execute after observer once",_c)}return{"/"(){console.log("%cMacro: olleh >< hello",_c,hello);window.mitm.macrokeys={"KeyA"(_e){console.log(`%cMacro: ${_e.code}`,_c,_e)},"{KeyA}"(_e){console.log(`%cAlt Macro: ${_e.code}`,_c,_e)},"us"(_e){console.log(`%cUS Country`,_c,_e)},"u"(_e){console.log(`%cU Char`,_c,_e)}};window.mitm.autofill=['input[type="password"] => password'];window.mitm.autobuttons=rbuttons;return observeOnce},zero:"0"}}}});var require_macros2=__commonJS({"user-route/_global_/_macros_/macros.js"(exports,module){module.exports=()=>{const hello="global";window.mitm.macros={global:hello};return window.mitm.macros}}});var{macros}=window.mitm;var _body1=require_macros();if(typeof _body1==="function"){_body1=_body1()}var global=require_macros2();if(typeof global==="function"){global=global()}window.mitm.macros=__spreadValues(__spreadValues(__spreadValues({},global),macros),_body1);})();
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vX21hY3Jvc18vbWFjcm9zLmpzIiwgIi4uLy4uL19nbG9iYWxfL19tYWNyb3NfL21hY3Jvcy5qcyIsICIuLi9fbWFjcm9zXy9idWlsZC5qcyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiY29uc3QgX2MgPSAnY29sb3I6IGNvcm5mbG93ZXJibHVlJ1xyXG5cclxuY29uc3QgcmJ1dHRvbnMgPSB7XHJcbiAgJ1JpZ2h0fCMxNDQ1ZDczMyc6IGFzeW5jIGZ1bmN0aW9uICgpIHtcclxuICAgIGNvbnNvbGUubG9nKCclY01hY3JvOiBDbGlja2VkIG9uIFwiUmlnaHRcIiBidXR0b24nLCAnY29sb3I6I2JjMDA5OScpXHJcbiAgfSxcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSAoKSA9PiB7XHJcbiAgY29uc3QgaGVsbG8gPSAnd29ybGQnXHJcblxyXG4gIGFzeW5jIGZ1bmN0aW9uIG9ic2VydmVPbmNlKCkge1xyXG4gICAgY29uc29sZS5sb2coJyVjTWFjcm86IGV4ZWN1dGUgYWZ0ZXIgb2JzZXJ2ZXIgb25jZScsIF9jKVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHtcclxuICAgICcvJygpIHtcclxuICAgICAgY29uc29sZS5sb2coJyVjTWFjcm86IG9sbGVoID48IGhlbGxvJywgX2MsIGhlbGxvKVxyXG4gICAgICB3aW5kb3cubWl0bS5tYWNyb2tleXMgPSB7XHJcbiAgICAgICAgJ0tleUEnKF9lKSB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhgJWNNYWNybzogJHtfZS5jb2RlfWAsIF9jLCBfZSlcclxuICAgICAgICB9LFxyXG4gICAgICAgICd7S2V5QX0nKF9lKSB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhgJWNBbHQgTWFjcm86ICR7X2UuY29kZX1gLCBfYywgX2UpXHJcbiAgICAgICAgfSxcclxuICAgICAgICAndXMnKF9lKSB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhgJWNVUyBDb3VudHJ5YCwgX2MsIF9lKVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgJ3UnKF9lKSB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhgJWNVIENoYXJgLCBfYywgX2UpXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICB3aW5kb3cubWl0bS5hdXRvZmlsbCA9IFsnaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdID0+IHBhc3N3b3JkJ11cclxuICAgICAgd2luZG93Lm1pdG0uYXV0b2J1dHRvbnMgID0gcmJ1dHRvbnNcclxuXHJcbiAgICAgIHJldHVybiBvYnNlcnZlT25jZVxyXG4gICAgfSxcclxuICAgIHplcm86ICcwJ1xyXG4gIH1cclxufVxyXG4iLCAibW9kdWxlLmV4cG9ydHMgPSAoKSA9PiB7XHJcbiAgY29uc3QgaGVsbG8gPSAnZ2xvYmFsJ1xyXG5cclxuICB3aW5kb3cubWl0bS5tYWNyb3MgPSB7Z2xvYmFsOiBoZWxsb31cclxuICByZXR1cm4gd2luZG93Lm1pdG0ubWFjcm9zXHJcbn1cclxuIiwgIi8vIFtDdHJsXSArIFtBbHRdICsgW0FdID0+IHJ1biBob3RrZXkgS2V5QVxuLy8gW0N0cmxdICsgW1NoaWZ0XSA9PiBIaWRlIC8gU2hvdyBCdXR0b25zXG5jb25zdCB7bWFjcm9zfSA9IHdpbmRvdy5taXRtXG5sZXQgX2JvZHkxID0gcmVxdWlyZSgnLi9tYWNyb3MnKVxuaWYgKHR5cGVvZiBfYm9keTE9PT0nZnVuY3Rpb24nKSB7XG4gIF9ib2R5MSA9IF9ib2R5MSgpXG59XG5sZXQgZ2xvYmFsID0gcmVxdWlyZSgnLi4vLi4vX2dsb2JhbF8vX21hY3Jvc18vbWFjcm9zJylcbmlmICh0eXBlb2YgZ2xvYmFsPT09J2Z1bmN0aW9uJykgeyBcbiAgZ2xvYmFsID0gZ2xvYmFsKClcbn1cbndpbmRvdy5taXRtLm1hY3JvcyA9IHtcbiAgLi4uZ2xvYmFsLFxuICAuLi5tYWNyb3MsXG4gIC4uLl9ib2R5MSxcbn1cbiJdLAogICJtYXBwaW5ncyI6ICIyc0JBQUEsNEZBQU0sSUFBSyx3QkFFWCxHQUFNLFVBQVcsQ0FDZixrQkFBbUIsZ0JBQWtCLENBQ25DLFFBQVEsSUFBSSxxQ0FBc0MsbUJBSXRELE9BQU8sUUFBVSxJQUFNLENBQ3JCLEtBQU0sT0FBUSxRQUVkLDRCQUE2QixDQUMzQixRQUFRLElBQUksdUNBQXdDLElBR3RELE1BQU8sQ0FDTCxLQUFNLENBQ0osUUFBUSxJQUFJLDBCQUEyQixHQUFJLE9BQzNDLE9BQU8sS0FBSyxVQUFZLENBQ3RCLE9BQU8sR0FBSSxDQUNULFFBQVEsSUFBSSxZQUFZLEdBQUcsT0FBUSxHQUFJLEtBRXpDLFNBQVMsR0FBSSxDQUNYLFFBQVEsSUFBSSxnQkFBZ0IsR0FBRyxPQUFRLEdBQUksS0FFN0MsS0FBSyxHQUFJLENBQ1AsUUFBUSxJQUFJLGVBQWdCLEdBQUksS0FFbEMsSUFBSSxHQUFJLENBQ04sUUFBUSxJQUFJLFdBQVksR0FBSSxNQUloQyxPQUFPLEtBQUssU0FBVyxDQUFDLHNDQUN4QixPQUFPLEtBQUssWUFBZSxTQUUzQixNQUFPLGNBRVQsS0FBTSxTQ3RDVixnR0FBTyxRQUFVLElBQU0sQ0FDckIsS0FBTSxPQUFRLFNBRWQsT0FBTyxLQUFLLE9BQVMsQ0FBQyxPQUFRLE9BQzlCLE1BQU8sUUFBTyxLQUFLLFdDRnJCLEdBQU0sQ0FBQyxRQUFVLE9BQU8sS0FDeEIsR0FBSSxRQUFTLGlCQUNiLEdBQUksTUFBTyxVQUFTLFdBQVksQ0FDOUIsT0FBUyxTQUVYLEdBQUksUUFBUyxrQkFDYixHQUFJLE1BQU8sVUFBUyxXQUFZLENBQzlCLE9BQVMsU0FFWCxPQUFPLEtBQUssT0FBUyxnREFDaEIsUUFDQSxRQUNBIiwKICAibmFtZXMiOiBbXQp9Cg==
